plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'jacoco'
    id "io.freefair.lombok" version "6.1.0"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.+'
    api 'com.nimbusds:nimbus-jose-jwt:9.+'

    implementation 'com.amazonaws:aws-java-sdk-kms:1.12.+'
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'commons-cli:commons-cli:1.4'
    implementation 'com.google.guava:guava:30.1.1-jre'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.+'
    testImplementation 'org.assertj:assertj-core:3.+'

    // Mockito
    testImplementation 'org.mockito:mockito-core:3.+'
    testImplementation 'org.mockito:mockito-inline:3.+'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.+'

    // Easy Rand
    testImplementation 'org.jeasy:easy-random-core:4.3.0'
}

version = '1.0.0'
apply from: 'scripts.gradle'

test {
    useJUnitPlatform() // Use JUnit Platform for unit tests.
}

// JoCoCo config
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}
jacocoTestCoverageVerification {
    dependsOn jacocoTestReport
    violationRules {
        rule {
            element = 'CLASS'
            excludes = [
                    'com.nimbusds.jose.aws.kms.scripts.*',
                    'com.nimbusds.jose.crypto.*',

                    // TODO: Remove following rule, once their test-cases are written.
                    'com.nimbusds.jose.aws.kms.crypto.impl.KmsSymmetricCryptoProvider',
                    'com.nimbusds.jose.aws.kms.crypto.KmsSymmetricDecrypter',
                    'com.nimbusds.jose.aws.kms.crypto.KmsSymmetricEncrypter',
            ]
            limit {
                counter = 'BRANCH'
                minimum = 1.00
            }
        }
    }
}
check.dependsOn jacocoTestCoverageVerification

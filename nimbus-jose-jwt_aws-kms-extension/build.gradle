/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1.1/userguide/building_java_projects.html
 */
plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id "io.freefair.lombok" version "6.0.0-m2"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    api 'com.nimbusds:nimbus-jose-jwt:9.+'

    implementation 'com.amazonaws:aws-java-sdk-kms:1.12.20'
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'commons-cli:commons-cli:1.4'
}

version = '1.0.0'

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

def static propertiesToArgumentMapper(properties, argumentToMap) {
    def arguments = []
    properties.forEach { prop, val ->
        if (argumentToMap.contains(prop)) {
            arguments.add("--$prop")
            if (val) {
                arguments.add(val)
            }
        }
    }
    return arguments
}

task kmsSymmetricJWEEncrypt(type: JavaExec) {
    group = 'Execution'
    description = 'Run the main class with JavaExecTask'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.nimbusds.jose.aws.kms.scripts.KmsSymmetricJweCompactEncrypterScript'
    args = propertiesToArgumentMapper(project.getProperties(), ['alg', 'enc', 'kid', 'payload', 'help'])
}

task kmsSymmetricJWEDecrypt(type: JavaExec) {
    group = 'Execution'
    description = 'Run the main class with JavaExecTask'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.nimbusds.jose.aws.kms.scripts.KmsSymmetricJweCompactDecrypterScript'
    args = propertiesToArgumentMapper(project.getProperties(), ['jweToken', 'help'])
}

task kmsRsaSsaSigner(type: JavaExec) {
    group = 'Execution'
    description = 'Run the main class with JavaExecTask'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.nimbusds.jose.aws.kms.scripts.KmsAsymmetricJwsCompactSignatureGeneratorScript'
    args = propertiesToArgumentMapper(project.getProperties(), ['alg', 'kid', 'messageType', 'payload', 'help'])
}
